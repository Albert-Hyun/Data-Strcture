# 제너레이터는 이터레이터를 작성하는 편리한 방법
# __iter__ 와 __next__를 정의해서 이터레이터 간편 구현!
# return은 반환값 종료하고 호출자 제어 반환
# yield는 호출자에게 반환하고, 반환값이 소진되었을 때 메서드가 종료
# 기본적으로 이터레이터는 이터레이터 프로토콜을 구현하는 컨테이너 객체이다.
# 이터레이터는 yield 키워드를 사용하여 코드 실행 중에 값을 반환하다.
# 시퀀스를 반복하거나 반복문을 사용할 때 고려할 수 있다.

# 피보나치 수열 반영하기

def fib_generator():
    # 0, 1, 1, 2, 3, 5, 8, 11...
    a, b = 0, 1
    while True:
        yield b # 중간에 실행 중 값 반환 (여기서 return을 쓰면 그대로 종료)
        a, b = b, a+b

