# 정수에 대해서

파이썬에서 정수는 int형으로 나타나며, 불변형 객체이다 (메모리 제한 O)
정수 크기는 적어도 32비트로, ().bit_length() 메서드로 확인 가능
int(문자열, 밑) 을 통해서 2진수나 16진수를 10진수로 표현할 수 있다.

# 부동소수점에 대해서

파이썬에서 32비트 부동소수점은 1비트 부호, 23비트는 가수, 8비트는 지수에 해당 (단정도)
배정도 방식에서는 64비트 부동소수점을 나타낼 때 1비트는 부호, 52비트는 가수, 11비트는 지수
소수점에서 가수부를 계산할 때에는 x2를 해서 그 앞을 정한다.
부동소수점의 비교는 함부로 하면 안되며, unittest의 AssertAlmostEqual() 같은 정밀도 이내에서 시작

# 정수와 부동소수점의 메서드

/의 경우에는 부동소수점, //의 경우에는 정수를 반환하며 %는 나머지!
divmod (x,y) 는 몫과 나머지를 튜플 형태로 반환하며 round(x,n)은 반올림이다.
as_interger_ratio() 메서드는 부동소수점을 분수로 만들어준다.

# 복소수에 대해서

복소수는 정수+숫자 형태로, z.real, z.imag 형태 등으로 구할 수 있다.
복소수의 사울은 cmath 모듈을 통해서 사용 가능하며 math 모듈의 대부분 차지
cmath.phase(), polar(), rect(), pi, e 등의 다양한 기능도 제공받는다.

# fraction 모듈에 대해

파이썬은 분수를 다룰 때 fraction 모듈을 사용한다.
주로 제공되는 기능은 분모/분자를 얻는 등의 기능을 담당한다.
decimal 모듈은 10진법의 부동소수점이 필요할 때 사용하며, 정수나 문자열을 인수로!
math와 cmath의 exp() 함수는 정확도 면에서 decimal 모듈에 의해 그 정확도가 떨어진다.

# 넘파이 패키지에 대해

넘파이는 파이썬 프로그래밍 언어의 확장 패키지로, 대규모 다차원 배열/행렬을 지원
배열 연산에 쓰이는 수학 함수 라이브러리도 같이 포함되어 있다.
np. array 메서드를 활용해서 시퀀스의 시퀀스를 2차원 넘바이 배열로 생성한다 (n.dim은 차원)
넘파이로 만드는 배열은 파이썬으로 만드는 리스트보다 훨씬 더 효율적이다.
