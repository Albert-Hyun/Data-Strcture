# 모듈과 함수에 대해서 #

파이썬에서 모듈은 def를 사용해서 정의하며, 함수의 객체/참조가 같이 생성!
값을 반환하지 않은 함수의 경우에는 이를 프로시저라고 한다.
함수가 호출될 때마다 ‘활성화 레코드’ 가 생성, 여기서 반환값/주소, 매개/지역 변수가 기록
이런 정보는 스택에 기록이 되며, 1) 실매개변수 2) 반환 주소 3) 최상위 인덱스 변수만큼 늘리기 4) 함수
함수를 풀어내는 건 1) 총 메모리양만큼 감소 2) 반환 주소를 스택에서 빼내기 3) 최상위 인덱스는 감소

# 모듈의 기본값과 여러 기능 #

모듈을 생성할 때에는, 함수 또는 메서드에서 가변 객체 사용 지양해야 한다.
패키지는 모듈과 __init__ 으로 구성, __init__ 은 패키지의 초기화 코드의 실행 및 __all__ 정의!
__all__ 의 경우에는 미리 import될 부분을 정해놓는 코드이다.
__name__은 대화식 인터프리터/직접 실행에서 __main__ 과 같을 때 별도 실행
sys 모듈은 .path (검색 경로), ps1/ps2 (기본 및 보조 프롬프트), argv (프로그램 변수 사용)!
컴파일된 바이트코드 모듈은 -0 플래그 형식의 .pyo에 저장하고 라이브러리 배포에 주로 사용

# 제어문과 yield에 대해서 #

if/for/참과 거짓 (false, True)/break와 continue의 기본에 대해
파이썬에서는 제너레이터는 이터레이터를 __iter__, __next__ 로 만들 수 있다.
return 키워드는 반환값을 반환하고 메서드 종료 후, 호출자가 제어를 반환한다.
yield의 경우에는 바로 반환하지 않고 일단 식의 반환값 호출자 반환 후 (next), 소진시에만 종료!

# shutil, pickle, struct 모듈에 대해 #

shutil 모듈은 시스템에서 파일을 조작 및 복사할 때 유용한 모듈이다.
pickle 모듈은 파이썬 객체를 (형태를 유지) 가져와서 문자열 표현 으로 변환한다 (피클링)
struct 모듈을 사용하면 파이썬 객체를 이진 표현 (C) 으로 변환하거나, 이진 표현 (C) 을 객체로 변환!

# 오류 처리에 대해 (스타일 가이드) #

raise myError(“오류 메시지”) 형식으로 예외 처리! (두 개 인수를 X)
내장 예외 클라스 (ValueError) 를 적절하게 사용하면 좋으며 assert 남발하지 않는다.
라이브러리 또는 패키지에 따라 자체적인 예외를 정의하는 게 좋다
모든 예외를 처리하는 except문의 사용을 지양해라!
try/except 블록 내의 코드 양을 최소화해야 한다! (예상치 않은 오류 처리)
예외를 처리할 때에는 다음과 같이, 쉼표(,) 대신 as를 사용한다.
