# 컬렉션 자료구조란?

데이터를 서로 연관시키지 않고 모아두는 컨테이너이다.
시퀀스 자료구조와 비교하여 1) 멤버심 연산자 2) 크기 함수 3) 반복성 지원
파이썬의 내장 데이터 타입에는 셋과 딕셔너리가 존재하며, collection에는 더 있다.

# 셋 (set) 에 대해서

파이썬의 셋 (집합) 은 반복 가능하고, 가변적이며, 중복 요소 없고, 정렬 X
셋은 멤버십 테스트나 (in 지원), 중복 항목 제거에 즐겨 사용된다
삽입의 경우에는 O(1) 이며, 합집합의 시간 복잡도는 O(m+n), 교집합은 O(n) 이다.
메서드는 add(x), update/|=, union (복사본), intersection/&, difference, clear, discard, remove, pop
리스트와 딕셔너리 타입은 셋 속성을 사용할 수 있다.

# 딕셔너리에 대해서

파이썬 딕셔너리는 해쉬 테이블 (설명) 로 구성되어 있다.
해시 함수의 특징은 특정 객체에 해당하는 임의 정수 값을 상수 시간에 계산
딕셔너리는 컬렉션 매핑 타입으로 반복이 가능하며, len() 및 in도 같이 제공된다.
딕셔너리는 항목의 삽입 순서를 (원래는) 기억하지 않으며, 인덱스 위치 사용이 불가하다.
setdefault(키?), A.update(B), get(), items()/values()/keys(), popitems(), pop(), clear()
메서드의 복잡도는 복사 (n), 조회/할당/삭제 (1), 반복 (n) 이다.
딕셔너리의 순회는 주로 키를 사용하며 sorted() 로 차례대로 사용이 가능하다.
딕셔너리를 사용할 대 분기를 설정해서 효율적인 분기가 가능하다.

# 파이썬 컬렉션 데이터 타입

기본 딕셔너리 (collections.defaultdict)는 일반 딕셔너리와 누락된 키 처리가 가능
정렬된 딕셔너리 (collections.ordereddict)는 삽입 순서대로 항목을 지정한다.
카운터 딕셔너리 (counter)는 해시 가능한 객체를 카운팅하는 특화된 서브클래스이다
